import math

     
# Function to calculate sum of all proper
# divisors num --> given natural number
def divSum(num) :
     
    # Final result of summation of divisors
    result = 0
     
    # find all divisors which divides 'num'
    i = 2
    while i<= (math.sqrt(num)) :
       
        # if 'i' is divisor of 'num'
        if (num % i == 0) :
       
            # if both divisors are same then
            # add it only once else add both
            if (i == (num / i)) :
                result = result + i;
            else :
                result = result +  (i + num/i);
        i = i + 1
         
    # Add 1 to the result as 1 is also
    # a divisor
    return (result + 1);


def buddy(start, limit):
    result = []
    for i in range(start, limit + 1):        
        # n = i # define N        
        n_div = divSum(i) # calculate the sum of the proper divisors of N
        m = n_div - 1 # Define M
        if not m > i:
            continue
        else:
            m_div = divSum(m) # calculate the sum of the proper divisors of M
            if m_div == i + 1 and n_div == m + 1 : # check for buddy pairs
                result.append(i)
                result.append(int(m))                
                break                                       
        
    if len(result) > 1:
        return result
    else:
        return "Nothing"
